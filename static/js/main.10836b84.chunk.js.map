{"version":3,"sources":["api/api.js","api/index.js","Forms/useFormData.js","Forms/LoginForm.js","components/Nav.js","components/Setlists/Setlist.js","components/Setlists/FilterSongOptions.js","components/Setlists/AddSong.js","components/Setlists/AddSetlist.js","components/Setlists/SetlistAdmin.js","components/Setlists/SelectSetlist.js","components/Setlists/HighlightControls.js","components/Setlists/SetlistsPage.js","components/Songs/songData.js","components/Songs/EditSongForm.js","components/Songs/ViewSongs.js","components/Songs/SongsPage.js","components/Print/PrintPage.js","components/Footer.js","components/Page.js","Forms/ForgotPasswordForm.js","App.js","useFetchAuth.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getDatabase","songlistRef","ref","songsRef","api","getSonglistsRef","getSongsRef","getSongRef","id","getSonglistRef","getSonglistSongsRef","login","email","pass","auth","getAuth","signInWithEmailAndPassword","then","response","console","log","catch","error","errorCode","code","errorMessage","message","logout","signOut","registerUser","createUserWithEmailAndPassword","alert","errorr","updatePassword","sendPasswordResetEmail","getLoginObserver","callback","onAuthStateChanged","user","noop","useFormData","onSubmit","init","useState","formData","setFormData","handleReset","e","preventDefault","handleSetFormData","data","handleSubmit","handleInputChange","persist","target","name","value","handleLogin","login_email","login_pass","LoginForm","className","htmlFor","type","onChange","disabled","Nav","to","activeClassName","isActive","match","location","pathname","abbr","title","newTitle","Setlist","editMode","setlist","songsMap","handleRemoveSong","handleReorderSetlist","showMike","showCarl","highlight","songs","sorted","Object","entries","sort","onDragEnd","result","destination","source","index","droppableId","provided","snapshot","innerRef","map","song","idx","songId","draggableId","isDragDisabled","draggableProps","dragHandleProps","mike","carl","key","onClick","placeholder","FilterSongOptions","filter","setFilter","AddSong","handleAddSong","availableSongs","setAvailableSongs","filteredSongs","setFilteredSongs","selectedSong","setSelectedSong","length","matchStr","toLowerCase","newFilteredSongs","s","includes","nowAvailable","AddSetlist","handleAddSetlist","listTitle","setlistTitle","SetlistAdmin","handleDeleteList","handleRenameSetlist","songsNotInList","enableDeleteList","setEnableDeleteList","setTitle","useEffect","enabled","checked","SelectSetlist","setSelectedListId","setEditMode","selectedListId","setlists","list","HighlightControls","inLegend","setShowMike","setShowCarl","setHighlight","has","SetlistsPage","setSetlists","setSongs","setlistMap","setSetlistMap","setSongsMap","loadingSongs","setLoadingSongs","loadingSetlists","setLoadingSetlists","makeArrayFromDB","val","item","songlistsRef","onValue","lists","reverse","songsArr","setlistObj","songsObj","includedSongIds","keys","Set","forEach","add","get","listData","set","songlistSongsRef","songsData","newLastNumber","newListRef","push","firstListId","newListId","remove","removedOrder","startIndex","endIndex","oldPos","keyOptions","singerOptions","instrumentOptions","EditSongForm","handleCancel","newSongsRef","songRef","handleUpdateSong","enableDelete","setEnableDelete","o","singer","values","l","i","some","find","handleDelete","defaultProps","ViewSongs","filterByKey","setFilterByKey","filterBySinger","setFilterBySinger","filterByMike","setFilterByMike","filterByCarl","setFilterByCarl","allKeyOptions","concat","allSingerOptions","filtered","k","SongsPage","selectedSongData","setSelectedSongData","a","b","off","songOptions","options","print","window","PrintPage","setMike","setCarl","setKey","bold","setBold","loadingSetlist","setLoadingSetlist","setSetlist","useParams","setlistDB","makeSongsArray","c","SongRow","Footer","Page","path","ForgotPasswordForm","showForm","setShowForm","t","App","setUser","loading","setLoading","logged_in","useFetchAuth","loadingUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10836b84.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {getDatabase, ref} from 'firebase/database'\nimport { getAuth, signInWithEmailAndPassword, onAuthStateChanged, signOut, createUserWithEmailAndPassword, sendPasswordResetEmail } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCQeCmX7ouzkQGwXDWqGHaKwXHZg6yZjgQ\",\n  authDomain: \"madbread-setlists.firebaseapp.com\",\n  databaseURL: \"https://madbread-setlists.firebaseio.com\",\n  projectId: \"madbread-setlists\",\n  storageBucket: \"madbread-setlists.appspot.com\",\n  messagingSenderId: \"659663875433\",\n  appId: \"1:659663875433:web:3a43234812cd2a9814e1f8\"\n}\n\n// Initialize DB\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\nconst songlistRef = ref(db, 'data/songLists');\nconst songsRef = ref(db, 'data/songs');\n\nconst methods = {\n  getSonglistsRef: () => songlistRef,\n  getSongsRef: () => songsRef,\n\n  getSongRef: id => ref(db, `data/songs/${id}`),\n\n  getSonglistRef: id => ref(db, `data/songLists/${id}`),\n  getSonglistSongsRef: id => ref(db, `data/songLists/${id}/songs`),\n  \n  login: (email, pass) => {\n    const auth = getAuth();\n    return signInWithEmailAndPassword(auth, email, pass)\n      .then((response) => {\n        console.log('response: ', response)\n        console.log('...you are signed in!')\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode, errorMessage)\n      });\n  },\n\n  logout: () => {\n    const auth = getAuth();\n    return signOut(auth)\n      .then(() => console.log('You have signed out'))\n      .catch(error => console.log('Error signing out: ', error))\n  },\n\n  registerUser: (email, pass) => {\n    const auth = getAuth();\n    return createUserWithEmailAndPassword(auth, email, pass)\n      .then(() => alert(`Created new user ${email}, logging in now.`))\n      .catch(error => console.errorr('Error registering user: ', error))\n  },\n\n  updatePassword: email => {\n    const auth = getAuth();\n    return sendPasswordResetEmail(auth, email)\n      .then(() => alert(`Password Update Email Sent to ${email}`))\n      .catch(error => console.error('Error updating password: ', error))\n  },\n\n  getLoginObserver: callback => {\n    const auth = getAuth();\n    return onAuthStateChanged(auth, user => {\n      user = user ? user : {}\n      callback(user)\n    })\n  }\n};\n\nexport default methods;","import api from './api';\n\nexport default api;","// This hook handles input changes on a form\n//   and returns them as an inputs object\nimport {useState} from 'react'\nconst noop = () => {}\n\nexport const useFormData = (onSubmit = noop, init = {}) => {\n  const [formData, setFormData] = useState(init)\n\n  const handleReset = e => {\n    if (e?.preventDefault) e?.preventDefault()\n    setFormData(init)\n  }\n\n  const handleSetFormData = data => setFormData(data)\n\n  const handleSubmit = e => {\n    if (e?.preventDefault) e?.preventDefault()\n    onSubmit(formData)\n  }\n\n  const handleInputChange = e => {\n    if (e?.persist) e.persist()\n    setFormData(formData => ({\n      ...formData,\n      [e.target.name]:e.target.value\n    }))\n  }\n\n  return {\n    formData,\n    handleSubmit,\n    handleInputChange,\n    handleReset,\n    handleSetFormData\n  }\n}\n","import React from 'react'\nimport api from '../api/'\nimport {useFormData} from './useFormData'\nimport './forms.css'\n\nconst handleLogin = data => api.login(data.login_email, data.login_pass)\n\nconst LoginForm = () => {\n  const {formData, handleSubmit, handleInputChange} = useFormData(handleLogin)\n\n  return (\n    <div className=\"form-page-container\">\n      <form className=\"basic-form\" onSubmit={handleSubmit}>\n        <h3>Madbread Setlist App Login</h3>\n        <div className=\"field-pair\">\n          <label htmlFor=\"login_email\">Email </label>\n          <input\n            type=\"email\"\n            name=\"login_email\"\n            id=\"login_email\"\n            value={formData.login_email || ''}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className=\"field-pair\">\n          <label htmlFor=\"login_pass\">Password </label>\n          <input\n            id=\"login_pass\"\n            type=\"password\"\n            name=\"login_pass\"\n            value={formData.login_pass || ''}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button disabled={!formData.login_email || !formData.login_pass} type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import './nav.css';\nimport { NavLink } from \"react-router-dom\";\n\nconst Nav = () => {\n  return  (\n    <nav className=\"noprint\">\n      <ul className=\"nav nav-pills\">\n        <li>\n          <NavLink\n            to=\"/setlists\" \n            activeClassName=\"active\"\n            isActive={(match, location) => (match || location.pathname === '/')}\n          >\n            Setlists\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/songs\" activeClassName=\"active\">\n            Songs\n          </NavLink> \n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Nav;\n","import PropTypes from 'prop-types';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst abbr = title => {\n  let newTitle;\n  switch (title) {\n    case 'Mandolin':\n      newTitle = 'Mando';\n      break;\n    case 'Harmonica':\n      newTitle = 'Harp';\n      break;\n    case 'Guitar':\n      newTitle = 'Guitar';\n      break;\n    case 'Fiddle':\n      newTitle = 'Fidd';\n      break;\n    case 'Lap Steel':\n      newTitle = 'Lap';\n      break;\n    case 'Electric':\n      newTitle = 'Elec';\n      break;\n    default:\n      newTitle = title;\n  }\n  return newTitle\n}\n\nconst Setlist = ({\n  editMode,\n  setlist,\n  songsMap,\n  handleRemoveSong,\n  handleReorderSetlist,\n  showMike,\n  showCarl,\n  highlight\n}) => {\n  const songs = setlist.songs || {};\n  const sorted = Object.entries(songs).sort(([,a],[,b]) => a-b);\n  \n  const displayList = () => sorted.map((song, idx) => {\n    const songId = song[0];\n    return (\n      <Draggable key={songId} draggableId={songId} index={idx} isDragDisabled={!editMode}>\n        {(provided, snapshot) => (\n          <tr\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={`color_${songsMap[songId][highlight] || ''}`}\n          >\n            <td className=\"song-title\">{idx + 1}) {songsMap[songId].title}</td>\n            {showMike && <td className=\"name-col\">{abbr(songsMap[songId].mike)}</td>}\n            {showCarl && <td className=\"name-col\">{abbr(songsMap[songId].carl)}</td>}\n            <td className=\"short-col song-key\">{songsMap[songId].key}</td>\n            {editMode && <td className=\"short-col\"><button className=\"remove-button\" type=\"button\" onClick={() => handleRemoveSong(songId)}>X</button></td>}\n          </tr>\n        )}\n      </Draggable>\n    );\n  });\n\n  const onDragEnd = result => {\n    if (!result.destination || !editMode) return;\n    handleReorderSetlist(result.source.index, result.destination.index);\n  }\n\n  return  (\n    <div className={editMode ? 'edit-mode songlist-container' : 'songlist-container'}>\n      {setlist && \n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <table className=\"songlist\"\n                ref={provided.innerRef}\n              >\n                <thead>\n                  <tr>\n                    <th className=\"song-title\"></th>\n                    {showMike && <th className=\"name-col\">Mike</th>}\n                    {showCarl && <th className=\"name-col\">Carl</th>}\n                    <th className=\"short-col song-key\">key</th>\n                    {editMode && <th className=\"short-col\"></th>}\n                  </tr>\n                </thead>\n                <tbody>\n                  {displayList()}\n                  {provided.placeholder}\n                </tbody>\n              </table>\n            )}\n          </Droppable>\n        </DragDropContext>\n      }\n    </div>\n  )\n}\n\nSetlist.propTypes = {\n  setlist: PropTypes.object,\n  songsMap: PropTypes.object,\n  handleRemoveSong: PropTypes.func,\n  handleReorderSetlist: PropTypes.func,\n  editMode: PropTypes.bool,\n  showMike: PropTypes.bool,\n  showCarl: PropTypes.bool,\n  highlight: PropTypes.string\n}\n\n\nexport default Setlist;\n","import PropTypes from 'prop-types';\n\nconst FilterSongOptions = ({filter, setFilter}) => (\n  <div className=\"filter-container\">\n    <input id=\"filter_songs\" placeholder=\"filter songs by title\" type=\"text\" value={filter} onChange={setFilter} />\n  </div>\n);\n\nFilterSongOptions.propTypes = {\n  filter: PropTypes.string,\n  setFilter: PropTypes.func\n}\n\nexport default FilterSongOptions;","import PropTypes from 'prop-types';\nimport {useState} from 'react';\nimport FilterSongOptions from './FilterSongOptions';\n\nconst AddSong = ({songs,  handleAddSong}) => {\n  const [filter, setFilter] = useState('');\n\n  const [availableSongs,  setAvailableSongs] = useState([...songs]);\n  const [filteredSongs, setFilteredSongs] = useState([...availableSongs]);\n  const [selectedSong, setSelectedSong] = useState(filteredSongs[0]?.id)\n\n  const handleSaveSong = () =>  {\n    handleAddSong(selectedSong)\n    const nowAvailable = availableSongs.filter(s => s.id !== selectedSong);\n    setAvailableSongs(nowAvailable);\n    setFilteredSongs([...nowAvailable]);\n    setSelectedSong(nowAvailable[0]?.id);\n    setFilter('');\n  }\n\n  const handleSetFilter = e => {\n    setFilter(e.target.value);\n    if (e.target.value?.length > 1) {\n      const matchStr = e.target.value.toLowerCase();\n      const newFilteredSongs = songs.filter(s => s.title.toLowerCase().includes(matchStr));\n      setFilteredSongs(newFilteredSongs);\n      setSelectedSong(newFilteredSongs[0]?.id);\n    } else {\n      setFilteredSongs([...songs])\n    }\n  }\n\n  return  (\n    <div>\n      <h3>Add Song</h3>\n      <div className=\"field-pair\">\n        <label htmlFor=\"filter_songs\">Filter Songs</label>\n        <FilterSongOptions filter={filter} setFilter={handleSetFilter}/>\n      </div>\n      <div className=\"field-pair\">\n        <label htmlFor=\"song_select\">Song</label>\n        <select id=\"song_select\" value={selectedSong} onChange={e => setSelectedSong(e.target.value)} >\n          {filteredSongs.map(song => <option value={song.id} key={song.id}>{song.title}</option>)}\n        </select>\n      </div>\n      <div className=\"align-right\">\n        <button type=\"button\" onClick={handleSaveSong}>+ Add</button>\n      </div>\n    </div>\n  )\n}\n\nAddSong.propTypes = {\n  songs: PropTypes.array,\n  handleAddSong: PropTypes.func\n}\n\nexport default AddSong;\n","import PropTypes from 'prop-types';\nimport {useState} from 'react';\n\nconst AddSetlist = ({handleAddSetlist}) => {\n  const [listTitle, setlistTitle] = useState('');\n\n  const clearTitleAndSubmit = () => {\n    const newTitle = listTitle;\n    handleAddSetlist(newTitle);\n    setlistTitle('');\n  };\n\n  return  (\n    <div className=\"add-setlist\">\n      <div className=\"field-pair\">\n        <label htmlFor=\"add_list\">New Setlist</label>\n        <input id=\"add_list\" onChange={e => setlistTitle(e.target.value)} name=\"title\" value={listTitle} />\n      </div>\n      <div className=\"align-right\">\n        <button disabled={!listTitle.length} onClick={clearTitleAndSubmit}>+ Add New Setlist</button>\n      </div>\n    </div>\n  )\n}\n\nAddSetlist.propTypes = {\n  handleAddSetlist: PropTypes.func\n}\n\nexport default AddSetlist;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport AddSong from './AddSong';\nimport AddSetlist from './AddSetlist';\n\nimport './setlist-admin.css'\n\nconst SetlistAdmin = ({handleAddSong, handleAddSetlist, handleDeleteList, handleRenameSetlist, songsNotInList, title}) => {\n  const [enableDeleteList, setEnableDeleteList] = useState(false);\n  const [newTitle, setTitle] = useState(title);\n\n  useEffect(() => setTitle(title), [title]);\n\n  const resetEnableDelete = () => {\n    setEnableDeleteList(false);\n    handleDeleteList();\n  };\n\n  return  (\n    <div className=\"list-admin\">\n      <AddSong handleAddSong={handleAddSong} songs={songsNotInList} />\n      <hr />\n      <h3>Rename This List</h3>\n      <div className=\"field-pair\">\n        <label htmlFor=\"new_list_title\">Name</label>\n        <input id=\"new_list_title\" name=\"title\" value={newTitle} onChange={e => setTitle(e.target.value)} />\n      </div>\n      <div className=\"align-right\">\n        <button disabled={newTitle === title || newTitle === ''} onClick={() => handleRenameSetlist(newTitle)}>Update Name</button>\n      </div>\n      <hr />\n      <div className=\"field-pair\">\n        <label htmlFor=\"enableDel\">Delete</label>\n        <button className={enableDeleteList ? 'delete' : 'hidden'} disabled={!enableDeleteList} onClick={resetEnableDelete}>Delete This Setlist</button>\n        <input className=\"hidden\" id=\"enableDel\" name=\"enableDel\" onChange={() => setEnableDeleteList(enabled => !enabled)} type=\"checkbox\" checked={enableDeleteList} />\n      </div>\n        \n      <hr />\n      <h3>Add New Setlist</h3>\n      <AddSetlist handleAddSetlist={handleAddSetlist} />\n    </div>\n  )\n}\n\nSetlistAdmin.propTypes = {\n  handleAddSong: PropTypes.func,\n  handleAddSetlist: PropTypes.func,\n  handleDeleteList: PropTypes.func,\n  handleRenameSetlist: PropTypes.func,\n  songsNotInList: PropTypes.array,\n  title: PropTypes.string\n};\n\n\nexport default SetlistAdmin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SelectSetlist = ({setSelectedListId, setEditMode, editMode, selectedListId, setlists}) => (\n  <div className=\"list-selector\">\n    <label htmlFor=\"selectSetlist\">Setlist</label>\n    <div className=\"select-container\">\n      <select value={selectedListId} id=\"selectSetlist\" onChange={e => setSelectedListId(e.target.value)}>\n        {setlists.map(list => <option value={list.id} key={list.id}>{list.title}</option>)}\n      </select>\n    </div>\n    <button className={editMode ? 'active' : ''} type=\"button\" onClick={() => setEditMode(!editMode)}>\n      {editMode ? 'Lock' : 'Edit'}\n    </button>\n  </div>\n);  \n\nSelectSetlist.propTypes = {\n  setSelectedListId: PropTypes.func,\n  setEditMode: PropTypes.func,\n  editMode: PropTypes.bool,\n  selectedListId: PropTypes.string,\n  setlists: PropTypes.array\n};\n\nexport default SelectSetlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst HighlightControls = ({inLegend, highlight, showMike, showCarl, setShowMike, setShowCarl, setHighlight}) => (\n  <>\n    <div className=\"highlight-controls\">\n      <select id=\"highlight\" value={highlight} onChange={e => setHighlight(e.target.value)}>\n        <option value=\"\">None</option>\n        <option value=\"mike\">Mike</option>\n        <option value=\"carl\">Carl</option>\n        <option value=\"singer\">Singer</option>\n      </select>\n      {highlight !== '' &&\n        <div className=\"highlight-legend\">\n          {inLegend.has('Mandolin') && <span className=\"color_Mandolin\">Mandolin</span>}\n          {inLegend.has('Bass') && <span className=\"color_Bass\">Bass</span>}\n          {inLegend.has('Fiddle') && <span className=\"color_Fiddle\">Fiddle</span>}\n          {inLegend.has('Guitar') && <span className=\"color_Guitar\">Guitar</span>}\n          {inLegend.has('Electric') && <span className=\"color_Electric\">Electric</span>}\n          {inLegend.has('Banjo') && <span className=\"color_Banjo\">Banjo</span>}\n          {inLegend.has('Harmonica') && <span className=\"color_Harmonica\">Harmonica</span>}\n          {inLegend.has('Mike') && <span className=\"color_Mike\">Mike</span>}\n          {inLegend.has('Carl') && <span className=\"color_Carl\">Carl</span>}\n        </div>\n      }\n      <div className=\"input-group\">\n        <label htmlFor=\"cb_mike\">Mike</label>\n        <div className=\"cb_input\">\n          <input id=\"cb_mike\" type=\"checkbox\" checked={showMike} onChange={e => setShowMike(e.target.checked)}/>\n        </div>\n      </div>\n      <div className=\"input-group\">\n        <label htmlFor=\"cb_carl\">Carl</label>\n        <div className=\"cb_input\">\n          <input id=\"cb_carl\" type=\"checkbox\" checked={showCarl} onChange={e => setShowCarl(e.target.checked)}/>\n        </div>\n      </div>  \n    </div>\n  </>\n);\n\nHighlightControls.propTypes = {\n  inLegend: PropTypes.object,\n  highlight: PropTypes.string,\n  showMike: PropTypes.bool,\n  showCarl: PropTypes.bool,\n  setShowMike: PropTypes.func,\n  setShowCarl: PropTypes.func,\n  setHighlight: PropTypes.func,\n};\n\nexport default HighlightControls;\n","import {useState, useEffect} from 'react';\nimport api from '../../api';\nimport {onValue, get, set, push, remove} from 'firebase/database';\nimport Setlist from './Setlist';\nimport SetlistAdmin from './SetlistAdmin';\nimport SelectSetlist from './SelectSetlist';\nimport HighlightControls from './HighlightControls';\nimport { Link } from 'react-router-dom';\n\nconst SetlistsPage = () => {\n  const [editMode, setEditMode] = useState(false);\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [setlists, setSetlists] = useState([]);\n  const [songs, setSongs] = useState([]);\n\n  const [showMike, setShowMike]   = useState(true);\n  const [showCarl, setShowCarl]   = useState(true);\n  const [highlight, setHighlight] = useState('singer');\n\n  const [setlistMap, setSetlistMap] = useState({});\n  const [songsMap, setSongsMap] = useState({});\n\n  const [loadingSongs, setLoadingSongs] = useState(true);\n  const [loadingSetlists, setLoadingSetlists] = useState(true);\n\n  useEffect(() => {\n    const makeArrayFromDB = snapshot => {\n      return Object.entries(snapshot.val()).map(([id, item]) => {\n        item.id = id;\n        return item;\n      });\n    }\n    \n    const songlistsRef = onValue(api.getSonglistsRef(), snapshot => {\n      setSetlistMap(snapshot.val());\n      const lists = makeArrayFromDB(snapshot).reverse();\n      setSetlists(lists);\n      setLoadingSetlists(false);\n    });\n    \n    const songsRef = onValue(api.getSongsRef(), snapshot => {\n      setSongsMap(snapshot.val());\n      const songsArr = makeArrayFromDB(snapshot);\n      setSongs(songsArr);\n      setLoadingSongs(false);\n    });\n\n    return () => {\n      songlistsRef();\n      songsRef();\n    }\n  }, []);\n\n  const handleRemoveSong = songId => {\n    const songlistSongsRef = api.getSonglistSongsRef(selectedListId);\n    get(songlistSongsRef).then(songs => {\n      const songsData = songs.val();\n      const removedOrder = songsData[songId];\n      delete songsData[songId];\n      for (const song in songsData) {\n        if (songsData[song] > removedOrder ) {\n          songsData[song]--;\n        }\n      }\n      set(songlistSongsRef, songsData);\n    });\n  };\n\n  const handleReorderSetlist = (startIndex, endIndex) => {\n    const songlistSongsRef = api.getSonglistSongsRef(selectedListId);\n    get(songlistSongsRef).then(songs => {\n      const songsData = songs.val();\n      for (const song in songsData) {\n        const oldPos = songsData[song];\n        if (oldPos === startIndex ) {\n          songsData[song] = endIndex;\n        } else if (oldPos < startIndex  && oldPos >= endIndex) {\n          songsData[song] = oldPos + 1;\n        } else if (oldPos > startIndex  && oldPos <= endIndex) {\n          songsData[song] = oldPos - 1;\n        }\n      }\n      set(songlistSongsRef, songsData);\n    });\n  };\n\n  const handleRenameSetlist = title => {\n    const songlistRef = api.getSonglistRef(selectedListId);\n    get(songlistRef).then(list => {\n      const listData = list.val() || {};\n      listData.title = title;\n      set(songlistRef, listData);\n    });\n  };\n\n  const handleAddSetlist = title => {\n    const songlistsRef = api.getSonglistsRef();\n    const newListRef = push(songlistsRef);\n    set(newListRef, {title});\n  }\n\n  const handleDeleteList = () => {\n    if (setlists.length === 1) {\n      alert('You cannot delete the Last Setlist');\n    } else {\n      const firstListId = setlists[0].id;\n      const newListId = firstListId === selectedListId ? setlists[1].id : firstListId;\n      const songlistRef = api.getSonglistRef(selectedListId);\n      remove(songlistRef)\n      setSelectedListId(newListId);\n    }\n  }\n\n  const handleAddSong = songId => {\n    const songlistSongsRef = api.getSonglistSongsRef(selectedListId);\n    get(songlistSongsRef).then(songs => {\n      const songsData = songs.val() || {};\n      const setlistObj = setlistMap[selectedListId]\n      const songsObj = setlistObj?.songs || {};\n      const newLastNumber = Object.keys(songsObj).length\n      songsData[songId] = newLastNumber;\n      set(songlistSongsRef, songsData);\n    });\n  }\n\n  if (loadingSetlists || loadingSongs) return <p>Loading...</p>\n\n  if (selectedListId === null) setSelectedListId(setlists[0].id);\n\n  const setlistObj = setlistMap[selectedListId || setlists[0].id]\n  const songsObj = setlistObj?.songs || {};\n  const includedSongIds =  Object.keys(songsObj);\n  const songsNotInList = songs.filter(s => !includedSongIds.includes(s.id));\n\n  const inLegend = new Set();\n  if (highlight !== '') includedSongIds.forEach(id => inLegend.add(songsMap[id][highlight]));\n\n  return  (\n    <div className=\"page-setlist\">\n      <SelectSetlist\n        setSelectedListId={setSelectedListId}\n        setEditMode={setEditMode}\n        editMode={editMode}\n        selectedListId={selectedListId}\n        setlists={setlists}\n      />\n\n      <HighlightControls\n        inLegend={inLegend}\n        highlight={highlight}\n        showMike={showMike}\n        showCarl={showCarl}\n        setShowMike={setShowMike}\n        setShowCarl={setShowCarl}\n        setHighlight={setHighlight}/>\n      \n      {editMode &&\n        <SetlistAdmin\n          title={setlistMap[selectedListId].title}\n          handleRenameSetlist={handleRenameSetlist}\n          handleAddSong={handleAddSong}\n          handleAddSetlist={handleAddSetlist}\n          handleDeleteList={handleDeleteList}\n          songsNotInList={songsNotInList}\n        />\n      }\n      <Setlist\n        editMode={editMode}\n        setlist={setlistMap[selectedListId]}\n        songsMap={songsMap}\n        handleRemoveSong={handleRemoveSong}\n        handleReorderSetlist={handleReorderSetlist}\n        showMike={showMike}\n        showCarl={showCarl}\n        highlight={highlight}\n      />\n      <Link className=\"btn float-right\" to={`/print/${selectedListId}`} target=\"_blank\">Print List</Link>\n    </div>\n  )\n}\n\nexport default SetlistsPage;\n","export const keyOptions = [\n  'A', 'Am', 'Bb', 'Bbm', 'B', 'Bm', 'C', 'Cm', 'C#', 'C#m', 'D', 'Dm',\n  'Eb', 'Ebm', 'E', 'Em', 'F', 'Fm', 'F#', 'F#m', 'G', 'Gm', 'Ab', 'Abm'\n];\n\nexport const singerOptions = [\n  'Carl',\n  'Mike',\n  'Instrumental'\n];\n\nexport const instrumentOptions = [\n  '',\n  'Bass',\n  'Banjo',\n  'Mandolin',\n  'Fiddle',\n  'Guitar',\n  'Lap Steel',\n  'Electric',\n  'Harmonica',\n  'Kit',\n  'Cajon',\n];\n\nexport const getNewSong = () => ({\n  title: '',\n  key: 'C',\n  carl: 'Guitar',\n  mike: 'Mandolin',\n  singer: 'Carl'\n});","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {useFormData} from '../../Forms/useFormData';\nimport {keyOptions, singerOptions, instrumentOptions} from './songData';\nimport api from '../../api';\nimport {get, set, push, remove} from 'firebase/database';\n\nconst handleAddSong = data => {\n  const songsRef = api.getSongsRef();\n  const newSongsRef = push(songsRef);\n  set(newSongsRef, data);\n};\n\nconst handleUpdateSong = data => {\n  const songRef = api.getSongRef(data.id);\n  get(songRef).then(song => {\n    set(songRef, {...song.val(), ...data});\n  });\n};\n\nconst EditSongForm = ({song, handleCancel}) => {\n\n  const handleSave = data => {\n    if (!data.id) handleAddSong(data);\n    if (data.id) handleUpdateSong(data);\n    handleCancel();\n  };\n\n  const handleDelete = id => {\n    \n    // Check for existing song on any setlist\n    const songlistsRef = api.getSonglistsRef();\n    get(songlistsRef).then(songs => {\n      const songsData = songs.val();\n      const songIdsByList = Object.values(songsData).map(l => l.songs).map(i => Object.keys(i));\n      const songInUse = songIdsByList.some(l => l.find(i => i === id))\n\n      if (songInUse) {\n        alert('That song is currently on a setlist. Remove from all setlists to delete.')\n      } else {\n        const songRef = api.getSongRef(id);\n        remove(songRef);\n        handleCancel();\n      }\n    });\n  };\n\n  const {formData, handleSubmit, handleInputChange, handleSetFormData} = useFormData(handleSave, song);\n  const [enableDelete, setEnableDelete] = useState(false);\n\n  useEffect(() => {\n    if (song.id !== formData.id) handleSetFormData(song);\n  }, [song, handleSetFormData, formData]);\n\n  return (\n    <>\n      <hr />\n      <form className=\"basic-form\" onSubmit={handleSubmit}>\n        <div className=\"field-pair\">\n          <label htmlFor=\"title\">Title</label>\n          <input\n            name=\"title\"\n            value={formData.title || ''}\n            onChange={handleInputChange}\n            className=\"full-width\"\n          />\n        </div>\n        <div className=\"field-pair\">\n          <label htmlFor=\"key\">Key</label>\n          <select name=\"key\" value={formData.key} onChange={handleInputChange}>\n            {keyOptions.map(o => <option key={o} value={o}>{o}</option>)}\n          </select>\n        </div>\n        <div className=\"field-pair\">\n          <label htmlFor=\"singer\">Singer</label>\n          <select name=\"singer\" value={formData.singer} onChange={handleInputChange}>\n            {singerOptions.map(o => <option key={o} value={o}>{o}</option>)}\n          </select>\n        </div>\n        <div className=\"field-pair\">\n          <label htmlFor=\"carl\">Carl</label>\n          <select name=\"carl\" value={formData.carl} onChange={handleInputChange}>\n            {instrumentOptions.map(o => <option key={o} value={o}>{o}</option>)}\n          </select>\n        </div>\n        <div className=\"field-pair\">\n          <label htmlFor=\"mike\">Mike</label>\n          <select name=\"mike\" value={formData.mike} onChange={handleInputChange}>\n            {instrumentOptions.map(o => <option key={o} value={o}>{o}</option>)}\n          </select>\n        </div>\n        <div className=\"field-pair\">\n          <label></label>\n          <button type=\"submit\">save</button>\n          <button className=\"cancel\" type=\"button\" onClick={handleCancel}>cancel</button>\n        </div>\n\n        {song.id && \n          <>\n            <div className=\"field-pair\">\n              <label htmlFor=\"enable_delete\">Delete</label>\n              {enableDelete &&\n              <button className={enableDelete ? 'delete full-width' : ' delete hidden full-width'} type=\"button\" onClick={() => handleDelete(song.id)}>\n                x delete song\n              </button>\n              }\n            </div>\n            <input className=\"hidden\" id=\"enable_delete\" type=\"checkbox\" value={enableDelete} onChange={() => setEnableDelete(enabled => !enabled)} />\n          </>\n        }\n      </form>\n    </>\n  )\n}\n\nEditSongForm.propTypes = {\n  song: PropTypes.object,\n  handleCancel: PropTypes.func\n};\n\nEditSongForm.defaultProps = {\n  song: {}\n};\n\nexport default EditSongForm\n","import {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {keyOptions, singerOptions, instrumentOptions} from './songData';\n\nconst ViewSongs = ({songs}) => {\n  const [filteredSongs, setFilteredSongs] = useState(songs);\n  const [filterByKey, setFilterByKey] = useState('Any');\n  const [filterBySinger, setFilterBySinger] = useState('Any');\n  const [filterByMike, setFilterByMike] = useState('');\n  const [filterByCarl, setFilterByCarl] = useState('');\n\n  const allKeyOptions = ['Any'].concat(keyOptions);\n  const allSingerOptions = ['Any'].concat(singerOptions);\n\n  useEffect(() => {\n    let filtered = [...songs];\n    if (filterByKey !== 'Any') filtered = filtered.filter(s => s.key === filterByKey);\n    if (filterBySinger !== 'Any') filtered = filtered.filter(s => s.singer === filterBySinger);\n    if (filterByCarl !== '') filtered = filtered.filter(s => s.carl === filterByCarl);\n    if (filterByMike !== '') filtered = filtered.filter(s => s.mike === filterByMike);\n    setFilteredSongs(filtered);\n  }, [filterByKey, filterBySinger, filterByMike, filterByCarl, songs]);\n\n  return  (\n    <div>\n      <h2>View Songs</h2>\n      <div className=\"field-pair\">\n        <label htmlFor=\"by_key\">Key</label>\n        <select id=\"by_key\" value={filterByKey} onChange={e => setFilterByKey(e.target.value)}>\n          {allKeyOptions.map(k => <option value={k} key={k}>{k}</option>)}\n        </select>\n      </div>\n      <div className=\"field-pair\">\n        <label htmlFor=\"by_singer\">Singer</label>\n        <select id=\"by_singer\" value={filterBySinger} onChange={e => setFilterBySinger(e.target.value)}>\n          {allSingerOptions.map(k => <option value={k} key={k}>{k}</option>)}\n        </select>\n      </div>\n      <div className=\"field-pair\">\n        <label htmlFor=\"by_carl\">Carl</label>\n        <select id=\"by_carl\" value={filterByCarl} onChange={e => setFilterByCarl(e.target.value)}>\n          {instrumentOptions.map(k => <option value={k} key={k}>{k}</option>)}\n        </select>\n      </div>\n      <div className=\"field-pair\">\n        <label htmlFor=\"by_mike\">Mike</label>\n        <select id=\"by_mike\" value={filterByMike} onChange={e => setFilterByMike(e.target.value)}>\n          {instrumentOptions.map(k => <option value={k} key={k}>{k}</option>)}\n        </select>\n      </div>\n      <div className=\"view-songs\">\n        <table className=\"songlist\">\n          <thead>\n            <tr>\n              <th className=\"song-title\"></th>\n              <th className=\"short-col song-key\">key</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredSongs.map(s => (\n              <tr key={s.id}>\n                <td className=\"song-title\">{s.title}</td>\n                <td className=\"short-col song-key\">{s.key}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nViewSongs.propTypes = {\n  songs: PropTypes.array\n};\n\nViewSongs.defaultProps = {\n  songs: []\n};\n\nexport default ViewSongs;\n","import {useState, useEffect} from 'react';\nimport api from '../../api';\nimport {onValue, off} from 'firebase/database';\nimport EditSongForm from './EditSongForm';\nimport ViewSongs from './ViewSongs';\nimport {getNewSong} from './songData';\n\nconst SongsPage = () => {\n  const [songs, setSongs] = useState([]);\n  const [filteredSongs, setFilteredSongs] = useState([]);\n  const [loadingSongs, setLoadingSongs] = useState(true);\n  const [selectedSong, setSelectedSong] = useState('none');\n  const [filter, setFilter] = useState('');\n  const [selectedSongData, setSelectedSongData] = useState(null);\n\n  useEffect(() => {\n    const makeArrayFromDB = snapshot => {\n      return Object.entries(snapshot.val()).map(([id, item]) => {\n        item.id = id;\n        return item;\n      });\n    }\n    \n    const songsRef = api.getSongsRef();\n    onValue(songsRef, snapshot => {\n      const songsArr = makeArrayFromDB(snapshot);\n      songsArr.sort((a, b) => (a.title > b.title) ? 1 : -1);\n      setSongs(songsArr);\n      setFilteredSongs([...songsArr]);\n      setLoadingSongs(false);\n    });\n\n    return () => {\n      off(songsRef);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (selectedSong !== 'none') {\n      setSelectedSongData(songs.find(s => s.id === selectedSong))\n    }\n  }, [selectedSong, songs])\n  \n  if (loadingSongs) return <p>Loading...</p>\n\n  const handleSetFilter = e => {\n    setFilter(e.target.value);\n    if (e.target.value?.length > 1) {\n      const matchStr = e.target.value.toLowerCase();\n      const newFilteredSongs = songs.filter(s => s.title.toLowerCase().includes(matchStr));\n      setFilteredSongs(newFilteredSongs);\n      setSelectedSong('none');\n    } else {\n      setFilteredSongs([...songs])\n    }\n  }\n\n  const handleAddSong = () => {\n    setSelectedSong('none');\n    setSelectedSongData(getNewSong());\n  };\n\n  const handleCancel = () => {\n    setSelectedSong('none');\n    setSelectedSongData(null);\n  };\n\n  const options = () => {\n    const songOptions =  filteredSongs.map(s => <option value={s.id} key={s.id}>{s.title}</option>);\n    return [<option value=\"none\" key=\"none\">Select A Song</option>].concat(songOptions);\n  };\n\n  return  (\n    <div className=\"page-songs\">\n      <div className=\"songlist-container\">\n          <h2>Edit Songs</h2>\n          <div className=\"field-pair\">\n            <label htmlFor=\"song-filter\">Filter Songs</label>\n            <input onChange={handleSetFilter} value={filter} />\n          </div>\n        <div className=\"field-pair\">\n          <label htmlFor=\"song-select\">Edit Song</label>\n          <select id=\"song-select\" value={selectedSong} onChange={e => setSelectedSong(e.target.value)} >\n            {options()}\n          </select>\n        </div>\n        <button onClick={handleAddSong} type=\"button\">+ New Song</button>\n        {selectedSongData && <EditSongForm song={selectedSongData} handleCancel={handleCancel} />}\n      </div>\n      <div className=\"songlist-container\">\n        <ViewSongs songs={songs} />\n      </div>\n    </div>\n  )\n}\n\nexport default SongsPage;\n","import {useState, useEffect} from 'react';\nimport api from '../../api';\nimport {onValue, off} from 'firebase/database';\nimport { useParams } from \"react-router-dom\";\n\n\nimport './print.css';\n\nconst print = () => window.print();\n\nconst PrintPage = () => {\n  const [mike, setMike] = useState(true);\n  const [carl, setCarl] = useState(true);\n  const [key, setKey] = useState(true);\n  const [bold, setBold] = useState(true);\n\n  const [title, setTitle] = useState('SETLIST');\n  const [songsMap, setSongsMap] = useState({});\n  const [loadingSongs, setLoadingSongs] = useState(true);\n  const [loadingSetlist, setLoadingSetlist] = useState(true);\n  const [setlist, setSetlist] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const makeSongsArray = ({songs}) => Object.entries(songs).sort(([,a],[,b]) => a-b).map(e => e[0]);\n\n    const songlistRef = api.getSonglistRef(id);\n    onValue(songlistRef, snapshot => {\n      const setlistDB = snapshot.val();\n      if (setlistDB) {\n        setSetlist(makeSongsArray(setlistDB));\n        setTitle(snapshot.val().title);\n      }\n      setLoadingSetlist(false);\n    });\n\n    const songsRef = api.getSongsRef();\n    onValue(songsRef, snapshot => {\n      setSongsMap(snapshot.val());\n      setLoadingSongs(false);\n    });\n\n    return () => {\n      off(songlistRef);\n    }\n  }, [id]);\n\n  if (loadingSetlist || loadingSongs) return <p>Loading...</p>\n\n  const SongRow = (s, idx) => {\n    return (\n      <tr key={idx}>\n        <td className={bold ? 'bold': ''}>{s.title}</td>\n        {carl && <td>{s.carl}</td>}\n        {mike && <td>{s.mike}</td>}\n        {key && <td>{s.key}</td>}\n      </tr>\n    )\n  };\n\n  return  (\n    <div className=\"print-records-page\">\n      <div className=\"noprint print_controls\">\n        <div className=\"fields\">\n          <div className=\"input-group\">\n            <label htmlFor=\"cb_Carl\">Carl</label>\n            <div className=\"cb_input\">\n              <input id=\"cb_Carl\" type=\"checkbox\" onChange={() => setCarl(c => !c)} checked={carl}/>\n            </div>\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"cb_Mike\">Mike</label>\n            <div className=\"cb_input\">\n              <input id=\"cb_Mike\" type=\"checkbox\" onChange={() => setMike(c => !c)} checked={mike}/>\n            </div>\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"cb_Key\">Key</label>\n            <div className=\"cb_input\">\n              <input id=\"cb_Key\" type=\"checkbox\" onChange={() => setKey(c => !c)} checked={key}/>\n            </div>\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"cb_Bold\">Bold Titles</label>\n            <div className=\"cb_input\">\n              <input id=\"cb_Bold\" type=\"checkbox\" onChange={() => setBold(c => !c)} checked={bold} />\n              </div>\n          </div>\n        </div>\n      </div>\n      <h1>\n        <span>{title}</span>\n        <span\n          className=\"noprint float-right text-small hand\"\n          onClick={print}\n        >print</span>\n      </h1>\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            {carl && <th>Carl</th>}\n            {mike && <th>Mike</th>}\n            {key && <th>Key</th>}\n          </tr>\n        </thead>\n        <tbody className=\"zebra\">\n          {setlist.map((s, idx) => SongRow(songsMap[s], idx))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default PrintPage;\n","import api from \"../api\";\n\nconst Footer = () => {\n  return  (\n    <div className=\"page-footer noprint\">\n      <button type=\"button\" onClick={api.logout}>Logout</button>\n    </div>\n  )\n}\n\nexport default Footer;\n","import Nav from './Nav';\nimport { Switch, Route } from 'react-router-dom';\nimport SetlistsPage from './Setlists/SetlistsPage';\nimport SongsPage from './Songs/SongsPage';\nimport PrintPage from './Print/PrintPage';\nimport Footer from './Footer';\n\nconst Page = () => {\n  return  (\n    <div className=\"page\">\n      <Nav/>\n      <Switch>\n        <Route path=\"/setlists\">\n          <SetlistsPage/>\n        </Route>\n        <Route path=\"/songs\">\n          <SongsPage/>\n        </Route>\n        <Route path=\"/print/:id\">\n          <PrintPage/>\n        </Route>\n        <Route path=\"/\">\n          <SetlistsPage/>\n        </Route>\n      </Switch>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default Page;\n","import React, {useState} from 'react';\nimport api from '../api';\nimport {useFormData} from './useFormData';\nimport './forms.css';\n\nconst handleLogin = data => api.updatePassword(data.email);\n\nconst ForgotPasswordForm = () => {\n  const [showForm, setShowForm] = useState(false);\n  const {formData, handleSubmit, handleInputChange} = useFormData(handleLogin);\n\n  return (\n    <div className=\"form-page-container\">\n      <button onClick={() => setShowForm(t => !t)} type=\"button\">Forgot Passowrd</button>\n      <form className={showForm ? 'basic-form' : 'hidden basic-form'} onSubmit={handleSubmit}>\n        <h3>Request New Password</h3>\n        <div className=\"field-pair\">\n          <label htmlFor=\"forgot_email\">Email </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"forgot_email\"\n            value={formData.email || ''}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button disabled={!formData.email} type=\"submit\">submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ForgotPasswordForm;\n","import {useFetchAuth} from './useFetchAuth';\nimport LoginForm from './Forms/LoginForm';\nimport Page from './components/Page';\nimport ForgotPasswordForm from './Forms/ForgotPasswordForm';\n\nimport './globals.css'\nimport './songlist.css'\n\nconst App = () => {\n  const [loadingUser, user] = useFetchAuth();\n  if (loadingUser) return <div className=\"loading\">loading...</div>;\n\n  return user.logged_in\n    ? <Page/>\n    : <>\n        <LoginForm/>\n        <ForgotPasswordForm />\n      </>\n}\n\nexport default App;\n","// This hook returns current user status\nimport { useState, useEffect } from 'react'\nimport api from './api'\n\nexport const useFetchAuth = () => {\n  const [ user, setUser ] = useState({})\n  const [ loading, setLoading ] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n    api.getLoginObserver((user) => {\n        setUser({\n            name: user.email || 'Guest',\n            logged_in: user.email ? true : false\n        })\n        setLoading(false)\n    })\n\n  }, [])\n\n  return [ loading, user ]\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from \"react-router-dom\";\n\n// Before Deployment, setup router for github-pages if using BrowserRouter\n// https://create-react-app.dev/docs/deployment/#github-pages\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}